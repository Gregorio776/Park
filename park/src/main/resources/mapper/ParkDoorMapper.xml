<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.grq.park.mapper.ParkDoorMapper">
  <resultMap id="BaseResultMap" type="com.grq.park.model.ParkDoor">
    <!--@mbg.generated generated on Tue Feb 23 16:26:19 CST 2021.-->
    <!--@Table park_door-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="doorway" jdbcType="INTEGER" property="doorway" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated generated on Tue Feb 23 16:26:19 CST 2021.-->
    id, pid, doorway
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated generated on Tue Feb 23 16:26:19 CST 2021.-->
    update park_door
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="pid = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.pid,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="doorway = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.doorway,jdbcType=INTEGER}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated generated on Tue Feb 23 16:26:19 CST 2021.-->
    update park_door
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="pid = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.pid != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.pid,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="doorway = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.doorway != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.doorway,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated generated on Tue Feb 23 16:26:19 CST 2021.-->
    insert into park_door
    (pid, doorway)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.pid,jdbcType=INTEGER}, #{item.doorway,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.grq.park.model.ParkDoor" useGeneratedKeys="true">
    <!--@mbg.generated generated on Tue Feb 23 16:26:19 CST 2021.-->
    insert into park_door
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      pid,
      doorway,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      #{pid,jdbcType=INTEGER},
      #{doorway,jdbcType=INTEGER},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      pid = #{pid,jdbcType=INTEGER},
      doorway = #{doorway,jdbcType=INTEGER},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.grq.park.model.ParkDoor" useGeneratedKeys="true">
    <!--@mbg.generated generated on Tue Feb 23 16:26:19 CST 2021.-->
    insert into park_door
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="doorway != null">
        doorway,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="doorway != null">
        #{doorway,jdbcType=INTEGER},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="doorway != null">
        doorway = #{doorway,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
</mapper>